/*
    virtualMinds
    ---------------------------

    JaCaMo Project File

    This file defines the initial state of the MAS (initial agents, environment, organization, ....)

    (see jacamo/doc/jcm.html for more information about what can be defined in this file)

    JaCaMo <VERSION>
    <DATE>
*/ 

/*
 * utilizzare console web (localhost:PORTA) 
 * per controllare lo stato di agenti e artefatti
 */ 

mas virtualMinds { 
   
   /* ROBOT */
   agent plastic_robot: robots/robot.asl {
      // Beliefs per synapsis
      beliefs: synapsis_url("ws://localhost:9000/")
               synapsis_mind_class("robots.RobotMind")
               reconnection_attempts(5)
               
      // synapsis goal
      goals: createSynapsisMind(["plastic"])//, createMySynapsisMockEntity("PlasticRobotBodyMock")
   }
   
   agent paper_robot: robots/robot.asl {
      // Beliefs per synapsis
      beliefs: synapsis_url("ws://localhost:9000/")
               synapsis_mind_class("robots.RobotMind")
               reconnection_attempts(5)
      
      // synapsis goal     
      goals: createSynapsisMind(["paper"])
   }
   
   agent glass_robot: robots/robot.asl {
      // Beliefs per synapsis
      beliefs: synapsis_url("ws://localhost:9000/")
               synapsis_mind_class("robots.RobotMind")
               reconnection_attempts(5)
      
      // synapsis goal
      goals: createSynapsisMind(["glass"])
   }
      
   /* GARBAGES */
   agent plastic_garbage_spawner: garbages/garbage_spawner.asl {
      // Beliefs per synapsis spawner
      beliefs: synapsis_mind_base_name("plastic_garbage")
               synapsis_url("ws://localhost:9000/")
               synapsis_mind_class("garbages.GarbageMind")
               reconnection_attempts(5)
      
      // synapsis goal
      goals: spawnSynapsisArtifact(5,["plastic"]) //, createMySynapsisMockEntity("GarbageBodyMock")
   }
   
   agent paper_garbage_spawner: garbages/garbage_spawner.asl {
      // Beliefs per synapsis spawner
      beliefs: synapsis_mind_base_name("paper_garbage")
               synapsis_url("ws://localhost:9000/")
               synapsis_mind_class("garbages.GarbageMind")
               reconnection_attempts(5)
      
      // synapsis goal
      goals: spawnSynapsisArtifact(5,["paper"]) //, createMySynapsisMockEntity("GarbageBodyMock")
   }
   
   agent glass_garbage_spawner: garbages/garbage_spawner.asl {
      // Beliefs per synapsis spawner
      beliefs: synapsis_mind_base_name("glass_garbage")
               synapsis_url("ws://localhost:9000/")
               synapsis_mind_class("garbages.GarbageMind")
               reconnection_attempts(5)
      
      // synapsis goal
      goals: spawnSynapsisArtifact(5,["glass"]) //, createMySynapsisMockEntity("GarbageBodyMock")
   }
   
   /* BINS */
   agent plastic_bin_spawner: bins/bin_spawner.asl {
      // Beliefs per synapsis spawner
      beliefs: synapsis_mind_base_name("plastic_bin")
               synapsis_url("ws://localhost:9000/")
               synapsis_mind_class("bins.BinMind")
               reconnection_attempts(5)
      
      // synapsis goal
      goals: spawnSynapsisArtifact(1,["plastic"]) //, createMySynapsisMockEntity("BinBodyMock")
   }
   
   agent paper_bin_spawner: bins/bin_spawner.asl {
      // Beliefs per synapsis spawner
      beliefs: synapsis_mind_base_name("paper_bin")
               synapsis_url("ws://localhost:9000/")
               synapsis_mind_class("bins.BinMind")
               reconnection_attempts(5)
      
      // synapsis goal
      goals: spawnSynapsisArtifact(1,["paper"]) //, createMySynapsisMockEntity("BinBodyMock")
   }
   
   agent glass_bin_spawner: bins/bin_spawner.asl {
      // Beliefs per synapsis spawner
      beliefs: synapsis_mind_base_name("glass_bin")
               synapsis_url("ws://localhost:9000/")
               synapsis_mind_class("bins.BinMind")
               reconnection_attempts(5)
      
      // synapsis goal
      goals: spawnSynapsisArtifact(1,["glass"]) //, createMySynapsisMockEntity("BinBodyMock")
   }
   
   
   /* ESEMPIO per istanziare N agenti
   agent test : test_agent.asl {
       instances: 2
   }
   */
   
   /* 
   agent test1: test/test_agent.asl {
      // Beliefs per synapsis
      beliefs: synapsis_url("ws://localhost:9000/")
               synapsis_mind_class("artifacts.SimpleAgentMind")
               reconnection_attempts(5)

      // synapsis goal
      goals: createSynapsisMind(["prova",1,false]) //, createMySynapsisMockEntity("TestMock")
   }
   */
   
}